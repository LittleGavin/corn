#############################################################################
##  v      #                   The Coq Proof Assistant                     ##
## <O___,, #                INRIA - CNRS - LIX - LRI - PPS                 ##
##   \VV/  #                                                               ##
##    //   #  Makefile automagically generated by coq_makefile V8.5        ##
#############################################################################

# WARNING
#
# This Makefile has been automagically generated
# Edit at your own risks !
#
# END OF WARNING

#
# This Makefile was generated by the command line :
# coq_makefile -f Make -o Makefile 
#

.DEFAULT_GOAL := all

# This Makefile may take arguments passed as environment variables:
# COQBIN to specify the directory where Coq binaries resides;
# TIMECMD set a command to log .v compilation time;
# TIMED if non empty, use the default time command as TIMECMD;
# ZDEBUG/COQDEBUG to specify debug flags for ocamlc&ocamlopt/coqc;
# DSTROOT to specify a prefix to install path.

# Here is a hack to make $(eval $(shell works:
define donewline


endef
includecmdwithout@ = $(eval $(subst @,$(donewline),$(shell { $(1) | tr -d '\r' | tr '\n' '@'; })))
$(call includecmdwithout@,$(COQBIN)coqtop -config)

TIMED=
TIMECMD=
STDTIME?=/usr/bin/time -f "$* (user: %U mem: %M ko)"
TIMER=$(if $(TIMED), $(STDTIME), $(TIMECMD))

vo_to_obj = $(addsuffix .o,\
  $(filter-out Warning: Error:,\
  $(shell $(COQBIN)coqtop -q -noinit -batch -quiet -print-mod-uid $(1))))

##########################
#                        #
# Libraries definitions. #
#                        #
##########################

COQLIBS?=\
  -R "." CoRN
COQDOCLIBS?=\
  -R "." CoRN

##########################
#                        #
# Variables definitions. #
#                        #
##########################


OPT?=
COQDEP?="$(COQBIN)coqdep" -c
COQFLAGS?=-q $(OPT) $(COQLIBS) $(OTHERFLAGS) $(COQ_XML)
COQCHKFLAGS?=-silent -o
COQDOCFLAGS?=-interpolate -utf8
COQC?=$(TIMER) "$(COQBIN)coqc"
GALLINA?="$(COQBIN)gallina"
COQDOC?="$(COQBIN)coqdoc"
COQCHK?="$(COQBIN)coqchk"
COQMKTOP?="$(COQBIN)coqmktop"

##################
#                #
# Install Paths. #
#                #
##################

ifdef USERINSTALL
XDG_DATA_HOME?="$(HOME)/.local/share"
COQLIBINSTALL=$(XDG_DATA_HOME)/coq
COQDOCINSTALL=$(XDG_DATA_HOME)/doc/coq
else
COQLIBINSTALL="${COQLIB}user-contrib"
COQDOCINSTALL="${DOCDIR}user-contrib"
COQTOPINSTALL="${COQLIB}toploop"
endif

######################
#                    #
# Files dispatching. #
#                    #
######################

VFILES:=algebra/CSetoids.v\
  algebra/Cauchy_COF.v\
  algebra/COrdAbs.v\
  algebra/OperationClasses.v\
  algebra/CPoly_Degree.v\
  algebra/CRings.v\
  algebra/CornScope.v\
  algebra/Expon.v\
  algebra/CRing_Homomorphisms.v\
  algebra/CGroups.v\
  algebra/COrdFields.v\
  algebra/CAbGroups.v\
  algebra/CSemiGroups.v\
  algebra/COrdCauchy.v\
  algebra/CFields.v\
  algebra/CPoly_NthCoeff.v\
  algebra/CAbMonoids.v\
  algebra/CSums.v\
  algebra/CSetoidFun.v\
  algebra/CSetoidInc.v\
  algebra/Bernstein.v\
  algebra/CPoly_ApZero.v\
  algebra/RSetoid.v\
  algebra/CMonoids.v\
  algebra/CRing_as_Ring.v\
  algebra/COrdFields2.v\
  algebra/CPoly_Newton.v\
  algebra/CPolynomials.v\
  complex/Complex_Exponential.v\
  complex/CComplex.v\
  complex/AbsCC.v\
  complex/NRootCC.v\
  coq_reals/Rreals_iso.v\
  coq_reals/Rreals.v\
  coq_reals/Rsign.v\
  fta/KeyLemma.v\
  fta/CPoly_Rev.v\
  fta/FTAreg.v\
  fta/CPoly_Contin1.v\
  fta/FTA.v\
  fta/MainLemma.v\
  fta/KneserLemma.v\
  fta/CPoly_Shift.v\
  fta/CC_Props.v\
  ftc/RefSeparated.v\
  ftc/MoreIntervals.v\
  ftc/Differentiability.v\
  ftc/RefSeparating.v\
  ftc/RefSepRef.v\
  ftc/FTC.v\
  ftc/PartInterval.v\
  ftc/RefLemma.v\
  ftc/WeakIVTQ.v\
  ftc/Taylor.v\
  ftc/TaylorLemma.v\
  ftc/MoreFunSeries.v\
  ftc/DerivativeOps.v\
  ftc/COrdLemmas.v\
  ftc/PartFunEquality.v\
  ftc/Partitions.v\
  ftc/Continuity.v\
  ftc/CalculusTheorems.v\
  ftc/FunctSums.v\
  ftc/Integral.v\
  ftc/MoreFunctions.v\
  ftc/FunctSequence.v\
  ftc/FunctSeries.v\
  ftc/MoreIntegrals.v\
  ftc/Composition.v\
  ftc/Rolle.v\
  ftc/WeakIVT.v\
  ftc/Derivative.v\
  ftc/IntegrationRules.v\
  ftc/NthDerivative.v\
  ftc/StrongIVT.v\
  ftc/IntervalFunct.v\
  logic/CornBasics.v\
  logic/Classic.v\
  logic/CLogic.v\
  logic/PropDecid.v\
  logic/Stability.v\
  metrics/CPseudoMSpaces.v\
  metrics/CMetricSpaces.v\
  metrics/Prod_Sub.v\
  metrics/ContFunctions.v\
  metrics/LipExt.v\
  metrics/CPMSTheory.v\
  metrics/IR_CPMSpace.v\
  metrics/Equiv.v\
  model/lattice/CRlattice.v\
  model/fields/Qfield.v\
  model/fields/CRfield.v\
  model/groups/Zgroup.v\
  model/groups/Qgroup.v\
  model/groups/CRgroup.v\
  model/groups/Qposgroup.v\
  model/groups/QSposgroup.v\
  model/setoids/Zsetoid.v\
  model/setoids/Nsetoid.v\
  model/setoids/Nfinsetoid.v\
  model/setoids/CRsetoid.v\
  model/setoids/Qsetoid.v\
  model/setoids/Zfinsetoid.v\
  model/setoids/Qpossetoid.v\
  model/setoids/decsetoid.v\
  model/setoids/Npossetoid.v\
  model/Zmod/ZGcd.v\
  model/Zmod/ZDivides.v\
  model/Zmod/IrrCrit.v\
  model/Zmod/ZMod.v\
  model/Zmod/ZBasics.v\
  model/Zmod/Zm.v\
  model/Zmod/Cmod.v\
  model/ordfields/CRordfield.v\
  model/ordfields/Qordfield.v\
  model/reals/Cauchy_IR.v\
  model/reals/CRreal.v\
  model/structures/Qinf.v\
  model/structures/OpenUnit.v\
  model/structures/Qsec.v\
  model/structures/Zsec.v\
  model/structures/Qpossec.v\
  model/structures/QnnInf.v\
  model/structures/NNUpperR.v\
  model/structures/StepQsec.v\
  model/structures/Nsec.v\
  model/structures/QposInf.v\
  model/structures/Npossec.v\
  model/structures/QnonNeg.v\
  model/monoids/Nm_to_cycm.v\
  model/monoids/Zmonoid.v\
  model/monoids/CRmonoid.v\
  model/monoids/Qmonoid.v\
  model/monoids/Nm_to_freem.v\
  model/monoids/freem_to_Nm.v\
  model/monoids/QSposmonoid.v\
  model/monoids/Nposmonoid.v\
  model/monoids/Nmonoid.v\
  model/monoids/Qposmonoid.v\
  model/abgroups/QSposabgroup.v\
  model/abgroups/Qabgroup.v\
  model/abgroups/Qposabgroup.v\
  model/abgroups/CRabgroup.v\
  model/abgroups/Zabgroup.v\
  model/rings/Zring.v\
  model/rings/CRring.v\
  model/rings/Qring.v\
  model/partialorder/CRpartialorder.v\
  model/totalorder/QposMinMax.v\
  model/totalorder/ZMinMax.v\
  model/totalorder/QMinMax.v\
  model/metric2/LinfMetric.v\
  model/metric2/IntegrableFunction.v\
  model/metric2/LinfDistMonad.v\
  model/metric2/CRmetric.v\
  model/metric2/BoundedFunction.v\
  model/metric2/LinfMetricMonad.v\
  model/metric2/Qmetric.v\
  model/metric2/L1metric.v\
  model/semigroups/QSpossemigroup.v\
  model/semigroups/Qsemigroup.v\
  model/semigroups/Nsemigroup.v\
  model/semigroups/Npossemigroup.v\
  model/semigroups/CRsemigroup.v\
  model/semigroups/Qpossemigroup.v\
  model/semigroups/Zsemigroup.v\
  raster/Raster.v\
  reals/Max_AbsIR.v\
  reals/NRootIR.v\
  reals/fast/CRabs.v\
  reals/fast/CRAlternatingSum.v\
  reals/fast/ContinuousCorrect.v\
  reals/fast/CRarctan.v\
  reals/fast/CRpi.v\
  reals/fast/CRball.v\
  reals/fast/RasterizeQ.v\
  reals/fast/CRpower.v\
  reals/fast/CRGeometricSum.v\
  reals/fast/CRconst.v\
  reals/fast/CRcorrect.v\
  reals/fast/CRln.v\
  reals/fast/CRseries.v\
  reals/fast/CRFieldOps.v\
  reals/fast/LazyNat.v\
  reals/fast/PowerBound.v\
  reals/fast/CRsin.v\
  reals/fast/ModulusDerivative.v\
  reals/fast/CRexp.v\
  reals/fast/CRIR.v\
  reals/fast/RasterQ.v\
  reals/fast/CRArith.v\
  reals/fast/CRpi_fast.v\
  reals/fast/CRroot.v\
  reals/fast/CRsign.v\
  reals/fast/Compress.v\
  reals/fast/CRsum.v\
  reals/fast/Integration.v\
  reals/fast/CRcos.v\
  reals/fast/MultivariatePolynomials.v\
  reals/fast/CRartanh_slow.v\
  reals/fast/CRpi_slow.v\
  reals/fast/CRGroupOps.v\
  reals/fast/CRtrans.v\
  reals/fast/uneven_CRplus.v\
  reals/fast/CRarctan_small.v\
  reals/fast/Plot.v\
  reals/fast/Interval.v\
  reals/iso_CReals.v\
  reals/R_morphism.v\
  reals/OddPolyRootIR.v\
  reals/Q_in_CReals.v\
  reals/Series.v\
  reals/Bridges_iso.v\
  reals/RealLists.v\
  reals/Intervals.v\
  reals/Q_dense.v\
  reals/IVT.v\
  reals/RealCount.v\
  reals/Cesaro.v\
  reals/RealFuncts.v\
  reals/CPoly_Contin.v\
  reals/Cauchy_CReals.v\
  reals/CReals.v\
  reals/CSumsReals.v\
  reals/Bridges_LUB.v\
  reals/PosSeq.v\
  reals/faster/ARbigD.v\
  reals/faster/ARarctan.v\
  reals/faster/ARtrans.v\
  reals/faster/ARsign.v\
  reals/faster/AQmetric.v\
  reals/faster/ARArith.v\
  reals/faster/ARpi.v\
  reals/faster/ARAlternatingSum.v\
  reals/faster/ARexp.v\
  reals/faster/ApproximateRationals.v\
  reals/faster/ARcos.v\
  reals/faster/ARQ.v\
  reals/faster/ARbigQ.v\
  reals/faster/ARarctan_small.v\
  reals/faster/ARroot.v\
  reals/faster/ARsin.v\
  reals/CMetricFields.v\
  reals/CReals1.v\
  reals/CauchySeq.v\
  tactics/DiffTactics1.v\
  tactics/DiffTactics2.v\
  tactics/FieldReflection.v\
  tactics/Qauto.v\
  tactics/csetoid_rewrite.v\
  tactics/CornTac.v\
  tactics/RingReflection.v\
  tactics/Step.v\
  tactics/AlgReflection.v\
  tactics/Rational.v\
  tactics/DiffTactics3.v\
  transc/RealPowers.v\
  transc/TaylorSeries.v\
  transc/SinCos.v\
  transc/MoreArcTan.v\
  transc/TrigMon.v\
  transc/ArTanH.v\
  transc/PowerSeries.v\
  transc/Pi.v\
  transc/Exponential.v\
  transc/InvTrigonom.v\
  transc/Trigonometric.v\
  order/TotalOrder.v\
  order/Lattice.v\
  order/PartialOrder.v\
  order/SemiLattice.v\
  metric2/UniformContinuity.v\
  metric2/Complete.v\
  metric2/Prelength.v\
  metric2/StepFunctionMonad.v\
  metric2/Compact.v\
  metric2/MetricMorphisms.v\
  metric2/Classification.v\
  metric2/Graph.v\
  metric2/StepFunctionSetoid.v\
  metric2/Classified.v\
  metric2/FinEnum.v\
  metric2/Ranges.v\
  metric2/UCFnMonoid.v\
  metric2/StepFunction.v\
  metric2/ProductMetric.v\
  metric2/CompleteProduct.v\
  metric2/list_separates.v\
  metric2/DistanceMetricSpace.v\
  metric2/Limit.v\
  metric2/Hausdorff.v\
  metric2/Metric.v\
  stdlib_omissions/Q.v\
  stdlib_omissions/List.v\
  stdlib_omissions/Pair.v\
  stdlib_omissions/P.v\
  stdlib_omissions/N.v\
  stdlib_omissions/Z.v\
  util/PointFree.v\
  util/Qsums.v\
  util/SetoidPermutation.v\
  util/Qgcd.v\
  util/Extract.v\
  util/Qdlog.v\
  util/Container.v\
  classes/Qposclasses.v\
  classes/Qclasses.v\
  ode/BanachFixpoint.v\
  ode/SimpleIntegration.v\
  ode/FromMetric2.v\
  ode/metric.v\
  ode/Picard.v\
  ode/AbstractIntegration.v

ifneq ($(filter-out archclean clean cleanall printenv,$(MAKECMDGOALS)),)
-include $(addsuffix .d,$(VFILES))
else
ifeq ($(MAKECMDGOALS),)
-include $(addsuffix .d,$(VFILES))
endif
endif

.SECONDARY: $(addsuffix .d,$(VFILES))

VO=vo
VOFILES:=$(VFILES:.v=.$(VO))
GLOBFILES:=$(VFILES:.v=.glob)
GFILES:=$(VFILES:.v=.g)
HTMLFILES:=$(VFILES:.v=.html)
GHTMLFILES:=$(VFILES:.v=.g.html)
OBJFILES=$(call vo_to_obj,$(VOFILES))
ALLNATIVEFILES=$(OBJFILES:.o=.cmi) $(OBJFILES:.o=.cmo) $(OBJFILES:.o=.cmx) $(OBJFILES:.o=.cmxs)
NATIVEFILES=$(foreach f, $(ALLNATIVEFILES), $(wildcard $f))
ifeq '$(HASNATDYNLINK)' 'true'
HASNATDYNLINK_OR_EMPTY := yes
else
HASNATDYNLINK_OR_EMPTY :=
endif

#######################################
#                                     #
# Definition of the toplevel targets. #
#                                     #
#######################################

all: $(VOFILES) 

quick: $(VOFILES:.vo=.vio)

vio2vo:
	$(COQC) $(COQDEBUG) $(COQFLAGS) -schedule-vio2vo $(J) $(VOFILES:%.vo=%.vio)
checkproofs:
	$(COQC) $(COQDEBUG) $(COQFLAGS) -schedule-vio-checking $(J) $(VOFILES:%.vo=%.vio)
gallina: $(GFILES)

html: $(GLOBFILES) $(VFILES)
	- mkdir -p html
	$(COQDOC) -toc $(COQDOCFLAGS) -html $(COQDOCLIBS) -d html $(VFILES)

gallinahtml: $(GLOBFILES) $(VFILES)
	- mkdir -p html
	$(COQDOC) -toc $(COQDOCFLAGS) -html -g $(COQDOCLIBS) -d html $(VFILES)

all.ps: $(VFILES)
	$(COQDOC) -toc $(COQDOCFLAGS) -ps $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $^`

all-gal.ps: $(VFILES)
	$(COQDOC) -toc $(COQDOCFLAGS) -ps -g $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $^`

all.pdf: $(VFILES)
	$(COQDOC) -toc $(COQDOCFLAGS) -pdf $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $^`

all-gal.pdf: $(VFILES)
	$(COQDOC) -toc $(COQDOCFLAGS) -pdf -g $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $^`

validate: $(VOFILES)
	$(COQCHK) $(COQCHKFLAGS) $(COQLIBS) $(notdir $(^:.vo=))

beautify: $(VFILES:=.beautified)
	for file in $^; do mv $${file%.beautified} $${file%beautified}old && mv $${file} $${file%.beautified}; done
	@echo 'Do not do "make clean" until you are sure that everything went well!'
	@echo 'If there were a problem, execute "for file in $$(find . -name \*.v.old -print); do mv $${file} $${file%.old}; done" in your shell/'

.PHONY: all archclean beautify byte clean cleanall gallina gallinahtml html install install-doc install-natdynlink install-toploop opt printenv quick uninstall userinstall validate vio2vo

####################
#                  #
# Special targets. #
#                  #
####################

byte:
	$(MAKE) all "OPT:=-byte"

opt:
	$(MAKE) all "OPT:=-opt"

userinstall:
	+$(MAKE) USERINSTALL=true install

install:
	cd "." && for i in $(VOFILES) $(VFILES) $(GLOBFILES) $(NATIVEFILES) $(CMOFILES) $(CMIFILES) $(CMAFILES); do \
	 install -d "`dirname "$(DSTROOT)"$(COQLIBINSTALL)/CoRN/$$i`"; \
	 install -m 0644 $$i "$(DSTROOT)"$(COQLIBINSTALL)/CoRN/$$i; \
	done

install-doc:
	install -d "$(DSTROOT)"$(COQDOCINSTALL)/CoRN/html
	for i in html/*; do \
	 install -m 0644 $$i "$(DSTROOT)"$(COQDOCINSTALL)/CoRN/$$i;\
	done

uninstall_me.sh: Makefile
	echo '#!/bin/sh' > $@
	printf 'cd "$${DSTROOT}"$(COQLIBINSTALL)/CoRN && rm -f $(VOFILES) $(VFILES) $(GLOBFILES) $(NATIVEFILES) $(CMOFILES) $(CMIFILES) $(CMAFILES) && find . -type d -and -empty -delete\ncd "$${DSTROOT}"$(COQLIBINSTALL) && find "CoRN" -maxdepth 0 -and -empty -exec rmdir -p \{\} \;\n' >> "$@"
	printf 'cd "$${DSTROOT}"$(COQDOCINSTALL)/CoRN \\\n' >> "$@"
	printf '&& rm -f $(shell find "html" -maxdepth 1 -and -type f -print)\n' >> "$@"
	printf 'cd "$${DSTROOT}"$(COQDOCINSTALL) && find CoRN/html -maxdepth 0 -and -empty -exec rmdir -p \{\} \;\n' >> "$@"
	chmod +x $@

uninstall: uninstall_me.sh
	sh $<

clean::
	rm -f $(OBJFILES) $(OBJFILES:.o=.native) $(NATIVEFILES)
	find . -name .coq-native -type d -empty -delete
	rm -f $(VOFILES) $(VOFILES:.vo=.vio) $(GFILES) $(VFILES:.v=.v.d) $(VFILES:=.beautified) $(VFILES:=.old)
	rm -f all.ps all-gal.ps all.pdf all-gal.pdf all.glob $(VFILES:.v=.glob) $(VFILES:.v=.tex) $(VFILES:.v=.g.tex) all-mli.tex
	- rm -rf html mlihtml uninstall_me.sh

cleanall:: clean
	rm -f $(patsubst %.v,.%.aux,$(VFILES))

archclean::
	rm -f *.cmx *.o

printenv:
	@"$(COQBIN)coqtop" -config
	@echo 'CAMLC =	$(CAMLC)'
	@echo 'CAMLOPTC =	$(CAMLOPTC)'
	@echo 'PP =	$(PP)'
	@echo 'COQFLAGS =	$(COQFLAGS)'
	@echo 'COQLIBINSTALL =	$(COQLIBINSTALL)'
	@echo 'COQDOCINSTALL =	$(COQDOCINSTALL)'

Makefile: Make
	mv -f $@ $@.bak
	"$(COQBIN)coq_makefile" -f $< -o $@


###################
#                 #
# Implicit rules. #
#                 #
###################

$(VOFILES): %.vo: %.v
	$(COQC) $(COQDEBUG) $(COQFLAGS) $*

$(GLOBFILES): %.glob: %.v
	$(COQC) $(COQDEBUG) $(COQFLAGS) $*

$(VFILES:.v=.vio): %.vio: %.v
	$(COQC) -quick $(COQDEBUG) $(COQFLAGS) $*

$(GFILES): %.g: %.v
	$(GALLINA) $<

$(VFILES:.v=.tex): %.tex: %.v
	$(COQDOC) $(COQDOCFLAGS) -latex $< -o $@

$(HTMLFILES): %.html: %.v %.glob
	$(COQDOC) $(COQDOCFLAGS) -html $< -o $@

$(VFILES:.v=.g.tex): %.g.tex: %.v
	$(COQDOC) $(COQDOCFLAGS) -latex -g $< -o $@

$(GHTMLFILES): %.g.html: %.v %.glob
	$(COQDOC) $(COQDOCFLAGS)  -html -g $< -o $@

$(addsuffix .d,$(VFILES)): %.v.d: %.v
	$(COQDEP) $(COQLIBS) "$<" > "$@" || ( RV=$$?; rm -f "$@"; exit $${RV} )

$(addsuffix .beautified,$(VFILES)): %.v.beautified:
	$(COQC) $(COQDEBUG) $(COQFLAGS) -beautify $*

# WARNING
#
# This Makefile has been automagically generated
# Edit at your own risks !
#
# END OF WARNING

